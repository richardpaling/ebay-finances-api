<?php
/**
 * TransactionSummaryResponseTest
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * eBay Finances API
 *
 * This API is used to retrieve seller payouts and monetary transaction details related to those payouts.
 *
 * The version of the OpenAPI document: 1.8.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * TransactionSummaryResponseTest Class Doc Comment
 *
 * @category    Class
 * @description This type is the base response type of the getTransactionSummary method, and based on the filters that are used in the getTransactionSummary call URI, the response may include total count and amount of the seller&#39;s sales and credits, total count and amount of buyer refunds, and total count and amount of seller payment holds.
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class TransactionSummaryResponseTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "TransactionSummaryResponse"
     */
    public function testTransactionSummaryResponse()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "adjustment_amount"
     */
    public function testPropertyAdjustmentAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "adjustment_booking_entry"
     */
    public function testPropertyAdjustmentBookingEntry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "adjustment_count"
     */
    public function testPropertyAdjustmentCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "balance_transfer_amount"
     */
    public function testPropertyBalanceTransferAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "balance_transfer_booking_entry"
     */
    public function testPropertyBalanceTransferBookingEntry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "balance_transfer_count"
     */
    public function testPropertyBalanceTransferCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "credit_amount"
     */
    public function testPropertyCreditAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "credit_booking_entry"
     */
    public function testPropertyCreditBookingEntry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "credit_count"
     */
    public function testPropertyCreditCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dispute_amount"
     */
    public function testPropertyDisputeAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dispute_booking_entry"
     */
    public function testPropertyDisputeBookingEntry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dispute_count"
     */
    public function testPropertyDisputeCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "non_sale_charge_amount"
     */
    public function testPropertyNonSaleChargeAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "non_sale_charge_booking_entry"
     */
    public function testPropertyNonSaleChargeBookingEntry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "non_sale_charge_count"
     */
    public function testPropertyNonSaleChargeCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "on_hold_amount"
     */
    public function testPropertyOnHoldAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "on_hold_booking_entry"
     */
    public function testPropertyOnHoldBookingEntry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "on_hold_count"
     */
    public function testPropertyOnHoldCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "refund_amount"
     */
    public function testPropertyRefundAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "refund_booking_entry"
     */
    public function testPropertyRefundBookingEntry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "refund_count"
     */
    public function testPropertyRefundCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shipping_label_amount"
     */
    public function testPropertyShippingLabelAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shipping_label_booking_entry"
     */
    public function testPropertyShippingLabelBookingEntry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shipping_label_count"
     */
    public function testPropertyShippingLabelCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "transfer_amount"
     */
    public function testPropertyTransferAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "transfer_booking_entry"
     */
    public function testPropertyTransferBookingEntry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "transfer_count"
     */
    public function testPropertyTransferCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
